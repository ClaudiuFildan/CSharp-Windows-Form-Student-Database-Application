<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_StudentHelperLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>